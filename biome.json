{
	"$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
	"organizeImports": {
		"enabled": true
	},
	"linter": {
		"enabled": true,
		"rules": {
			"recommended": true,
			"complexity": {
				"noMultipleSpacesInRegularExpressionLiterals": "error",
				"useSimplifiedLogicExpression": "error",
				"noUselessLoneBlockStatements": "error",
				"noExcessiveNestedTestSuites": "error",
				"noEmptyTypeParameters": "error",
				"noExtraBooleanCast": "error",
				"noUselessThisAlias": "error",
				"noStaticOnlyClass": "error",
				"useOptionalChain": "error",
				"noUselessTernary": "error",
				"noUselessRename": "error",
				"useLiteralKeys": "error",
				"noUselessLabel": "error",
				"noThisInStatic": "error",
				"useDateNow": "error",
				"noForEach": "error",
				"noExcessiveCognitiveComplexity": "warn",
				"noUselessStringConcat": "warn",
				"noUselessConstructor": "warn",
				"useArrowFunction": "warn",
				"noUselessCatch": "warn",
				"noVoid": "warn",
				"noUselessEmptyExport": "info",
				"noUselessSwitchCase": "info",
				"useSimpleNumberKeys": "info",
				"useRegexLiterals": "info",
				"useFlatMap": "info"
			},
			"correctness": {
				"noConstantMathMinMaxClamp": "error",
				"noUndeclaredDependencies": "off",
				"noUndeclaredVariables": "error",
				"noConstructorReturn": "error",
				"noConstantCondition": "error",
				"noUnusedVariables": "error",
				"useArrayLiterals": "error",
				"noUnusedImports": "error",
				"noNewSymbol": "error",
				"useIsNan": "error",
				"noUnusedPrivateClassMembers": "warn",
				"noPrecisionLoss": "info"
			},
			"nursery": {
				"useConsistentMemberAccessibility": {
					"options": {
						"accessibility": "explicit"
					},
					"level": "error"
				},
				"useAdjacentOverloadSignatures": "error",
				"noUselessEscapeInRegex": "error",
				"noDuplicateElseIf": "error",
				"useExplicitType": "error",
				"useCollapsedIf": "error",
				"useGuardForIn": "error",
				"useAtIndex": "info",
				"noSubstr": "info"
			},
			"performance": {
				"noAccumulatingSpread": "warn"
			},
			"security": {
				"noGlobalEval": "error"
			},
			"style": {
				"useConsistentBuiltinInstantiation": "error",
				"noUnusedTemplateLiteral": "error",
				"useConsistentArrayType": {
					"options": {
						"syntax": "shorthand"
					},
					"level": "error",
					"fix": "unsafe"
				},
				"useExplicitLengthCheck": "error",
				"noParameterProperties": "error",
				"useNamingConvention": {
					"options": {
						"strictCase": false,
						"conventions": [
							{
								"selector": {
									"kind": "typeLike"
								},
								"formats": [
									"PascalCase"
								]
							},
							{
								"selector": {
									"kind": "const"
								},
								"formats": [
									"CONSTANT_CASE"
								]
							},
							{
								"selector": {
									"kind": "variable"
								},
								"formats": [
									"snake_case"
								]
							},
							{
								"selector": {
									"kind": "functionParameter"
								},
								"match": "([a-z][A-z]*|_[A-z]*)(_[0-9]+)?"
							},
							{
								"selector": {
									"kind": "classMember"
								},
								"formats": [
									"camelCase",
									"PascalCase"
								]
							},
							{
								"selector": {
									"kind": "objectLiteralProperty"
								},
								"match": ".+"
							}
						]
					},
					"level": "error"
				},
				"useAsConstAssertion": "error",
				"noNonNullAssertion": "error",
				"useShorthandAssign": "error",
				"useCollapsedElseIf": "error",
				"useBlockStatements": "error",
				"noParameterAssign": "error",
				"noShoutyConstants": "error",
				"noDefaultExport": "error",
				"noCommaOperator": "error",
				"noUselessElse": "error",
				"noNamespace": "error",
				"useForOf": "error",
				"noVar": "error",
				"noInferrableTypes": "warn",
				"noYodaExpression": "warn"
			},
			"suspicious": {
				"noEmptyBlockStatements": "error",
				"noEmptyInterface": "error",
				"useAwait": "info"
			}
		}
	},
	"formatter": {
		"enabled": true,
		"formatWithErrors": true,
		"indentWidth": 2,
		"indentStyle": "tab",
		"lineWidth": 100
	}
}